[pretty]
	twoline  = tformat:%C(auto)%h %C(auto,blue)%<(16)%an%C(auto)%d%n  %s
	twolineg = tformat:\t%C(auto)%h %C(auto,blue)%<(16)%an%C(auto)%d%n\t  %s

[alias]
	# Not meant to be used
	log2  = log --pretty=twoline
	log2g = !git mlog --pretty=twolineg

	# Log shortcuts
	llog = log --author-date-order --show-linear-break
	logp = log --patch --reverse
	logg = log --graph
	loga = log --graph --all
	lgg  = !git log2 --author-date-order --show-linear-break
	lgp  = !git log2 --patch --reverse
	lg   = !git log2g
	lga  = !git log2g --all
	lgs  = !git log2g --all --simplify-by-decoration

	# Other shortcuts
	cat     = !git -P
	stl     = !git status && git lgs
	diffs   = diff --stat
	fuge    = !vim -c \"if !exists(':Gedit') | cq | endif | Gedit $1:$2\" && :
	ls-refs = for-each-ref --format='%(refname)'
	page    = !git -p
	peek    = !bash -c '$(git var GIT_EDITOR) <(git show \"$1:$2\")' git-peek
	shows   = show --stat
	stashes = log --cc --walk-reflogs refs/stash
	view    = !git fuge \"$@\" || git peek

	# Custom commands
	ctags  = !~/.config/git/scripts/ctags.sh
	cptree = !~/.config/git/scripts/cptree.sh
	mlog   = !~/.config/git/scripts/mlog.sh
	revlog = !~/.config/git/scripts/revlog.sh

	# Typo correction
	dif      = diff
	difff    = diff
	statsu   = status

[pager]
	# Shortcuts
	logp  = less -+FX -RS -x 1,5
	lgp   = less -+FX -RS -x 1,5
	lgs   = less -RS -FX
	diffs = less -RS -FX
	shows = less -RS -FX

	# Custom commands
	cptree   = false
	ctags    = false
	mlog     = true
	revlog   = true

# vim: ft=gitconfig
