" Source default vimrc
if filereadable($VIMRUNTIME . "/defaults.vim")
	unlet! skip_defaults_vim
	source $VIMRUNTIME/defaults.vim
endif

" Handy shortcut
if has("win32")
	let s:homertp = $HOME . "/vimfiles"
else
	let s:homertp = $HOME . "/.vim"
endif

" Plugins
if has("eval")
	" Start plugin manager
	execute pathogen#infect()
endif
if has("autocmd")
	filetype plugin indent on
endif

" UI Preferences
set laststatus =2 " Always show status line

" Syntax highlighting
if has("termguicolors") && $COLORTERM == "truecolor"
	set termguicolors
	let &t_8f         ="\<Esc>[38;2;%lu;%lu;%lum"
	let &t_8b         ="\<Esc>[48;2;%lu;%lu;%lum"
endif
set background =dark
if g:loaded_pathogen == 1
	let         g:solarized_termcolors =256
	let         g:solarized_menu       =0
	colorscheme solarized
endif
if has("syntax")
	syntax enable
endif

" Movement
set scrolloff     =8
set nostartofline

" Visual indicators
set cursorline
set colorcolumn =100
set list
set listchars   =tab:>\ ,trail:~,extends:>,precedes:<,nbsp:\ "
set showbreak   =>\ "
if has("multi_byte")
	" Use let instead of set so we don't have to include unicode chars literally
	let &listchars = "tab:\u203a ,trail:\u00b7,extends:\u00bb,precedes:\u00ab,nbsp:\u00b7"
	let &showbreak = "\u00bb "
endif

" Spell checking
if has("syntax")
	set spelllang =en_us
	let &spellfile = s:homertp . "/spell/local.utf-8.add,"
	             \ . s:homertp . "/spell/personal.utf-8.add"
endif

" Tab behavior
set tabstop        =4
set shiftwidth     =0  " Use value of tabstop
set softtabstop    =-1 " Use value of shiftwidth
set noexpandtab
set autoindent
set linebreak
if has("linebreak")
	set breakindent
	set breakindentopt =min:20,shift:8
endif

" Window behavior
set winwidth    =80
set winminwidth =20
set splitbelow
set splitright
set nowrap

" Editing behavior
set virtualedit   =block
set formatoptions =croqlj " Specify default line-wrapping behavior
set textwidth     =78
if has("mouse")
	set mouse =a " Enable mouse
	if has("mouse_sgr")
		set ttymouse =sgr " Enable advanced mouse behavior
	endif
endif

" Tags
set tags +=./.tags,.tags,/usr/local/lib/**/tags,/usr/local/lib/**/.tags

" Navigation
map <X1Mouse> <C-O>
map <X2Mouse> <C-I>

" Searching
set ignorecase
set smartcase  " Ignore case only when all lowercase

" Macros
" Delete trailing whitespace
nmap <silent> ,d :s/\s\+$//<CR>
" Change word
nmap <silent> cc lbce
